import{ah as p,ai as g,aj as w}from"./index.9266fe7f.js";const $=["image/*"];function F(t){return new Promise((a,i)=>{if(typeof FileReader<"u"){const n=new FileReader;n.onload=function(e){v(e.target.result).then(o=>{const{canvas:c,height:s,width:l}=o;a({src:y(c),height:s,width:l})})},n.readAsDataURL(t),n.onerror=e=>{console.log("error-readImageAsDataUrl",e),i("no support FileReader")}}else i("no support FileReader")})}function v(t){return new Promise((a,i)=>{const n=document.createElement("canvas");if(t){const e=new Image;e.src=t,e.onload=()=>{n.width=e.width,n.height=e.height,n.getContext("2d").drawImage(e,0,0,e.width,e.height),a({canvas:n,height:e.height,width:e.width})},e.onerror=o=>{i(o)}}else n.width=0,n.height=0,a({canvas:n,height:0,width:0})})}function y(t){return t.toDataURL("image/png")}function u(t,a){return new Promise((i,n)=>{try{const e=document.createElement("a");if(e.setAttribute("href","data:text/plain;charset=UTF-8,"+encodeURIComponent(t)),e.setAttribute("download",a),e.style.display="none",document.createEvent){const o=document.createEvent("MouseEvents");o.initEvent("click",!0,!0),e.dispatchEvent(o)}else e.click();i("")}catch(e){n(e)}})}function b(t,a,i=""){return u(t,`${a}${i}`)}function x(t,a,i=""){const n=`<!DOCTYPE html><head><meta charset="UTF-8"><title>${a}</title></head><body>${t}</body></html>`;return u(n,`${a}${i}`)}function C(t,a){window.open(`#/preview/${t}/${a}`)}function A(t){return new Promise((a,i)=>{if(typeof FileReader<"u"){const n=new FileReader;n.readAsText(t,"utf-8"),n.onload=function(e){a(n.result)},n.onerror=e=>{i(e)}}else i("no support FileReader")})}function T(t){return A(t)}function I(t){let a="";const i=p(t,".");return i.length>1&&(a=`.${g(i[i.length-1])}`),a}function R(t,a){let i=!1;return t?w(a,n=>{let e="";if(n.indexOf("*")>-1&&(e=n.replaceAll("*","")),e?t.indexOf(e)>-1&&(i=!0):i=!0,i)return!1}):i=!0,i}function L(t,a,i=!1){return new Promise((n,e)=>{var o;if(!((o=t==null?void 0:t.clipboardData)!=null&&o.items))e("");else{const c=t.clipboardData.items.length;for(let s=0;s<c;s++){const l=t.clipboardData.items[s],{kind:f,type:h}=l;if(f==="file"&&R(h,a)){const d=l.getAsFile();t.preventDefault(),i?F(d).then(r=>{const{src:m}=r;n(m)}).catch(r=>{e(r),console.log("importFile-err",r)}):T(d).then(r=>{n(r)}).catch(r=>{e(r),console.log("importFile-err",r)})}}}})}export{C as a,x as b,$ as c,R as d,u as e,v as f,I as g,T as i,L as p,F as r,b as s};
